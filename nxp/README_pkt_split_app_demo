-----------------------------------------
Introduction to pkt_split_app application
-----------------------------------------

This DPDK application uses two or three ports, two of which are split port and Tap
interface. Third port is PCI/Demo port, which is optional to use.
Split port can be OL (with FMAN micro-code) or ethernet port (without FMAN
micro code).

An OL port is a pair of Frame queues which will be used as Tx and Rx frame
queues. ASK module will send the packets on the Rx FQ using the classification
information provided. The application will send the packets back to ASK module
using Tx FQ.

In case of two ports, packets which are received from split port with the provided
UDP destination port will be sent back on same split port. Source/Destination
IP address and Source/Destination Port will be swapped for these packets. Other
packets will be send to kernel by sending them to TAP interface.
Packet coming from TAP interface will be forwarded back on TAP interface without
any change.


In case of three ports, packets which are received from split port with the
provided UDP destination port will be sent back on PCI port. Source/Destination
IP address and Source/Destination port of the packets will NOT BE swapped. Other
packets will be send to kernel by sending them to TAP interface.
Similarly, Packets coming from PCI port will be forwarded on split port.
Source/Destination IP address and Source/Destination port of the packets will
NOT BE swapped.
Packet coming from TAP interface will be forwarded on PCI interface without any
change.


For two ports and UDP destination port = 2152(GTP packet):

  GTP Packets(Swapped Addresses and ports)         All Packets
            ------                                    ------
           |      |                                  |      |
           |     \|/                                 |     \|/
           ---------         Non GTP Packets         ---------
          |  SPLIT  |------------------------------>|   TAP   |
          |  PORT   |                               |Interface|
           ---------                                 ---------


For three ports and UDP destination port = 2152(GTP packet):

                               All Packets
          ------------------------------------------------------
         |                                                      |
         |                                                      |
        \|/     GTP Packets                                     |
          ------------------------                              |
         |                        |                             |
        \|/                       |                             |
      ---------  All Packets  ---------  Non GTP Packets    ---------
     |PCI/Demo |------------>|  SPLIT  |------------------>|   TAP   |
     |  PORT   |             |   PORT  |                   |Interface|
      ---------               ---------                     ---------



----------------------------
Compilation of pkt_split_app
----------------------------

Refer to nxp/README for cross compilation setup.
Section: "Building DPDK: Libraries and Test Applications"

Run these commands in the DPDK directory:
Compilation of DPDK drivers:
  $ make T=arm64-dpaa-linuxapp-gcc install CONFIG_RTE_KNI_KMOD=n -j 2

Compilation of pkt_split_app application:
  $ make -C examples/pkt_split_app

Location of pkt_split_app binary: examples/pkt_split_app/build/pkt_split_app


-------------------------------------------------------------------
Steps to run pkt_split_app on LS1046ARDB when split port is eth port
(Without ASK's FMAN micro code)
-------------------------------------------------------------------

1. fmc -x
2. ifconfig fm1-mac10 <valid IP address>
3. mount -t hugetlbfs hugetlbfs /dev/hugepages
4. echo 512 > /proc/sys/vm/nr_hugepages
5. fmc -c usdpaa_config_ls1046_shared_24g.xml -p usdpaa_policy_24g_classif_frag_gtp_1queue.xml -a
6. Bind PCI device with DPDK driver

   To print the available PCI devices, use:
   $ lspci
   $ dpdk-devbind --status

   Run these commands only if you want to use PCI port:
   $ dpdk-devbind -u 0001:01:00.0
   $ dpdk-devbind --bind=uio_pci_generic 0001:01:00.0
   $ dpdk-devbind --status

   Note: If above commands fail because of "python: no such file" error,
         Please try "ln -s /usr/bin/python3 /usr/bin/python"
7. Run the pkt_split_app application with three ports(Use PCI port):
   $ ./pkt_split_app -c 0xe -n 1 --vdev=net_tap0 -- -p 0xc1 -s 6 -m 8000

   This command will use one eth port, one PCI port and one Tap interface. Tap
   interface's mtu is 8000. Here split port id is 6.
   First port will be PCI port, second port will be eth port and third port will
   be Tap interface.

8. Run the pkt_split_app application with two ports(Don't use PCI port):
   $ ./pkt_split_app -c 0xe -n 1 --vdev=net_tap0 -- -p 0x60 -s 5 -m 8000

   This command will use one eth port and one Tap interface. Tap
   interface's mtu is 8000. Here split port id is 5
   first port will be eth port and second port will be Tap interface.

   Note: number of split port id should not be more than one.

-------------------------------------------------------------------
Steps to run pkt_split_app on LS1046ARDB when split port is OL port
(With ASK's FMAN micro code)
-------------------------------------------------------------------

Flash the LS1046ARDB board with ASK images and fman microcode.
After booting up the board, run the following commands:

1. Start the ask module:
   $ /etc/init.d/lsdk_ask start

2. Set the eth port UP which will be used as OL port:
   $ ifconfig eth0 1.1.1.1 up

3. Run the DPDK configuration commands:
   $ mkdir -p /dev/hugetlbfs
   $ echo 448 > /sys/kernel/mm/hugepages/hugepages-2048kB/nr_hugepages
   $ mount -t hugetlbfs hugetlbfs /dev/hugetlbfs/
   $ export DPAA_FMCLESS_MODE=1
   $ export DPAA_NUM_RX_QUEUES=1
   $ export OLDEV_ENABLED=1

4. Bind PCI device with DPDK driver

   To print the available PCI devices, use:
   $ lspci
   $ dpdk-devbind --status

   Run these commands only if you want to use PCI port:
   $ dpdk-devbind -u 0001:01:00.0
   $ dpdk-devbind --bind=uio_pci_generic 0001:01:00.0
   $ dpdk-devbind --status

   Note: If above commands fail because of "python: no such file" error,
         Please try "ln -s /usr/bin/python3 /usr/bin/python"

5. Export environment variable to define backhaul port
   $ export BH_PORT_NAME=<Backhaul port name>

   eg: to use eth0 as backhaul port, run "export BH_PORT_NAME=eth0"

6. Make sure user data comfiguration file exists and have proper
   values. Refer to the "Configure classification information" section for
   details.

NOTE: ARP should be resolved before sending the traffic.

7. Run the pkt_split_app application with three ports(Use PCI port):
   $ ./pkt_split_app -c 0xe -n 1 --vdev=net_tap0 -- -p 0x7

8. Run the pkt_split_app application with two ports(Don't use PCI port):
   $ ./pkt_split_app -c 0x6 -n 1 --vdev=net_tap0 -- -p 0x3

   Please check application logs to identify the ports and their IDs.


------------------------------------
Configure classification information
------------------------------------

Default file named data.input is used to configure the classification and
LGW traffic information for pkt_split_app. This file should be present in
the directory from where we are running the application. Optionally, user
can specify the filename by giving "-f" option in application cmdline.
Blank lines and the lines starting with '#' will be ignored.

Classification entries in data.input file:

  1. IPV4_INNER <inner IPv4 address>
     or
     IPV6_INNER <inner IPv6 addresses>

     e.g.:
       "IPV4_INNER 1.1.1.1"
       "IPV6_INNER fe80:0000:0000:0000:0204:9fff:fe06:5112"

  2. IPV4_STATIC <static IPv4 address>
     or
     IPV6_STATIC <static IPv6 addresses>

     e.g.:
       "IPV4_STATIC 172.1.1.1"
       "IPV6_STATIC 1111:0000:0000:0000:0204:9fff:fe06:5112"


  3. DEST_PORT <Space separated list of destination port number>
     e.g.: "DEST_PORT 2152 2123"

	Maximum 2 port numbers can be used. Use 2152 and 2123 for
	GTP-U and GTP-C traffic.

  4. PROTOCOL_ID <IP protocol number>
     e.g.: "PROTOCOL_ID 17"

  5. SEC_DISABLE <Disable IPsec. Value must be 1. By default, IPsec is enabled>
     e.g.: "SEC_DISABLE 1"

  6. LISTEN_MODE <Application traffic listen modes, acceptable values 0, 1, 2>
     0 -  Application is listening on both inner IP and static IP addresses.
     1 -  Application is listening on only static IP address.
     2 -  Application is listening on only inner IP address.

LGW traffic information in file:

  1. LGW_IPV4 <Space separated list of IPv4 subnets>
     and/or
     LGW_IPV6 <Space separated list of IPv6 subnets>

     Minimum one and maximum four IP subnets can be used.
     e.g.:
       "LGW_IPV4 172.16.0.0/16 10.0.0.0/8"
       "LGW_IPV6 2001:0db8:85a3:0000:0000:0000:0000:0000/64"

Note: IPv6 address format must be: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx
